name: Get Google Artifact Registry path

on:
  workflow_call:
    inputs:
      gcp-region:
        description: 'GCP region'
        required: true
        type: string
      gcp-project-id:
        description: 'GCP project ID'
        required: true
        type: string
      gar-repo-name:
        description: 'GAR repo name'
        required: true
        type: string
      gcp-cloud-run-service:
        description: 'GCP Cloud Run service'
        required: true
        type: string
    outputs:
      ARTIFACT_REPO:
        description: 'Path to Google Artifact Registry'
        value: ${{ jobs.get_path.outputs.ARTIFACT_REPO }}

jobs:
  get_path:
    runs-on: ubuntu-latest

    outputs:
      artifact_path: ${{ steps.set_path.outputs.ARTIFACT_REPO }}

    steps:
    - name: Set up GAR base URL
      id: set_base_url
      run: echo "ARTIFACT_BASE_URL=${{inputs.gcp-region}}-docker.pkg.dev" >> $GITHUB_ENV

    - name: Set the GAR repo URL
      id: set_repo_url
      run: echo "ARTIFACT_REPO=${{env.ARTIFACT_BASE_URL}}/${{inputs.gcp-project-id}}/${{inputs.gar-repo-name}}/${{inputs.gcp-cloud-run-service}}:${{ github.sha }}" >> $GITHUB_ENV

    - name: Set the GAR repo path
      id: set_path
      run: echo "ARTIFACT_REPO=${{env.ARTIFACT_REPO}}" >> $GITHUB_OUTPUT

# Usage:
# name: Call a reusable workflow and use its outputs

# on:
#   push:
#     branches:
#       - DISABLED

# jobs:
#   job1:
#     uses: ./.github/workflows/get-artifact-repo-path.yml
#     with:
#       gcp-region: 'europe-west1'
#       gcp-project-id: 'nettopp-auth-api'
#       gar-repo-name: 'nettopp-auth-api'
#       gcp-cloud-run-service: 'nettopp-auth-api'

#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#     - run: echo ${{ needs.job1.outputs.artifact-path }}
